name: Deploy to Salesforce on PR Merge

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  Check-Only-Deploy:
    runs-on:  ubuntu-latest
    steps:

      ###Requirements:
      # >> Need JWT flow setup based on JWT Certificate and Connected App
      # >> Connected Apps access must be provided to user.
      # >> Configure the below
      #   - JWT_PRIVATE_KEY: key of the cert
      #   - SF_CLIENT_ID: consumer key of the connected app
      #   - SF_USERNAME: username with which authentication takes place
      # NOTE: TEST Classes is not yet implemented

      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          npm install @salesforce/cli --global
          sf --version

      # SFDX-Git-Delta
      - name: Install plugins
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      # Install utilities
      - name: Install utilities
        run: |
         pip install yq
         xq --version
      
      # Checkout the code in the pull request
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Fetch base branch
      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}

      # Authenticate to target org
      - name: "Authenticate to Org"
        run: |
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > server.key
          sf org login jwt -i ${{ secrets.SF_CLIENT_ID }} -o ${{ secrets.SF_USERNAME }} -f server.key -s 
          
      # Check-only deploy
      - name: "Check-only delta deploy"
        run: |
          mkdir mdList
          sf sgd source delta -f "HEAD~$(git rev-list --count HEAD ^${{ github.event.pull_request.base.ref }})" -o mdList/ -i .forceignore
          echo "--- package.xml generated with added and modified metadata ---"
          cat mdList/package/package.xml
          echo "--- Delta Check-Only Deploy ---"
          sf project deploy start -x mdList/package/package.xml -w 30 --dry-run